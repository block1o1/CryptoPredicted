<!DOCTYPE html>
<html>
<head>

  <title>CryptoPredicted</title>
  
  <%- include('/home/cryptopredicted/PWA/server/views/parts2/head') %>
  <%- include('/home/cryptopredicted/PWA/server/views/parts2/header_scripts') %>

  <script>
    <%- include('/home/cryptopredicted/PWA/server/views/public2/js/socket.io.js') %>
  </script>
  <script>
    <%- include('/home/cryptopredicted/PWA/server/views/public2/js/moment.js') %>
  </script>
  <script>
    <%- include('/home/cryptopredicted/PWA/server/views/public2/js/plotly-latest.min.js') %>
  </script>

  <link href="//cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" rel="stylesheet">
  <script src="//cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>

  <script src="//cdn.datatables.net/responsive/2.2.1/js/dataTables.responsive.min.js"></script>
  <link href="https://cdn.datatables.net/responsive/2.2.1/css/responsive.dataTables.min.css" rel="stylesheet">


    <style>
        .subbtn[data-issub="1"] {
            color:green;
            border-color: green;
        }
        .subbtn[data-issub="0"] {
            color:red;
            border-color: red;
        }
        .subbtn {
            background: none;
            border: 1px solid;
            border-radius: 5px;
            cursor:pointer;
        }
        #myFoo tr.odd {
            background:#f8f8f8;
        }
        #myFoo tr.even {
            background:#fff;
        }
        table.dataTable.dtr-column > tbody > tr > td.control::before, table.dataTable.dtr-column > tbody > tr > th.control::before {
            content: '+';
            background:#111da5;
            line-height: 17px;
        }
        table.dataTable.dtr-column > tbody > tr.parent td.control::before, table.dataTable.dtr-column > tbody > tr.parent th.control::before {
            content: '-';
            background:#abb0e9;
            line-height: 17px;
        }
    </style>
    
</head>
<body class="inner2 filters-active">
  <!-- main container of all the page elements -->
  <div id="wrapper">
    <!-- header of the page -->
    <header id="header">
      <div class="container">
        <div class="inner-container">
          <a href="#" onclick="cp_backButton('/dashboard');return false;" class="btn-back"><span class="icon-arrow2"></span></a>
          <strong class="title">Trade signals</strong>
          <a href="#" id="toggle_filter"  class="filter-link">
            <span class="txt">filter</span>
            <span class="icon-cancel"></span>
          </a>
        </div>
      </div>
    </header>
    <!-- contain main informative part of the site -->
    <main id="main">
        <!-- filter block -->
        <div class="filters-block" style="padding-bottom: 20px;">
            <div class="container">
              <!-- form box -->
              <div class="form-box">
                <div class="field">
                  <span class="form-select">
                    <select id="exchange">
                      <!-- <option value="bittrex" selected="selected">Bittrex</option> -->
                      <option value="binance">Binance</option>
                      <!-- <option value="coinbase">Coinbase</option> -->
                    </select>
                  </span>
                </div>
                <!-- <button class="btn-done" type="submit">done</button> -->
              </div>
            </div>
        </div>
      <div class="container">
        <div class="sub-container">
            <p style="color:black; margin-top:20px;">
                [*] Click email/telegram to toggle notifcations and receive the buy &amp; sell signals in your inbox or telegram app (<a href="notifications">instructions</a>).<br>
            </p>

          <!-- watchlist-box -->
          <div class="watchlist-box" style="padding: 20px;">

            <table id="myFoo" class="display nowrap" style="width:100%;">
                <thead>
                <tr>
                    <th>Expand</th>
                    <th> Strategy </th>
                    <th> ROI (60 days) </th>
                    <th> Notifications [*] </th>
                    <th> Crypto market </th>
                    <th> Exchange </th>
                    <th> Interval </th>
                    <th class="none"> Chart </th>
                </tr>
                </thead>
                <tbody id="items"></tbody>
            </table>
          </div>

          <h4 style="text-align: center;margin: 100px auto;">Join us on <a style="color:#1111da;" href="https://t.me/crypto_predicted" target="_blank">telegram</a>.</h4>

        </div>
      </div>
    </main>
    <!-- footer of the page -->
    <%- include('/home/cryptopredicted/PWA/server/views/parts2/footer_blue') %>
  </div>

<script>
    var isMobile = false; //initiate as false
    // device detection
    if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) 
        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0,4))) { 
        isMobile = true;
    }

    /*var text_sub = 'off';
    var text_unsub = 'on &#10003;';*/

    $('#toggle_filter, .btn-done').on('click', function() {
        if ($('body').hasClass('filters-active')) {
          $('body').removeClass('filters-active');  
        }
        else {
          $('body').addClass('filters-active');
        }
        return false;
    });

    $('#exchange').change(function() {
        allowedStorage(function() {
          localStorage.setItem("exchange", $('#exchange').val() );
          init_predictionData();
        });
    });
    allowedStorage(function() {
        var exchange= localStorage.getItem("exchange");
        $('#exchange option[value="'+exchange+'"]').prop("selected", true);
    });
    function allowedStorage(next) {
        if (typeof(Storage) !== "undefined") {
            next()
        } 
      }

    function parseDateTime_dt(str, format) {
        if (typeof format == "undefined" || format == null) {
            format="YYYY-MM-DDTHH:mm";
        }
        return moment.utc(str, format).local(); 
    }
    function parseDateTime_string(str, format) {
        if (typeof format == "undefined" || format == null) {
            format="YYYY-MM-DDTHH:mm";
        }
        return parseDateTime_dt(str).format(format)  ;
    }

    function getCookie(name) {
        var re = new RegExp(name + "=([^;]+)");
        var value = re.exec(document.cookie);
        return (value != null) ? unescape(value[1]) : null;
    }

    var ann_template_BottomUpArrow = {
        x: null, 
        y: null,
        xref: 'x',
        yref: 'y',
        text: 'buy',
        font: {color: 'magenta'},
        showarrow: true,
        
        arrowwidth:1,
        arrowsize:2,
        arrowhead:3,
        ax: 0,
        ay: 30
    };
    var ann_template_TopDownArrow = {
        x: null, 
        y: null,
        xref: 'x',
        yref: 'y',
        text: 'buy',
        font: {color: 'magenta'},
        showarrow: true,
        
        arrowwidth:1,
        arrowsize:2,
        arrowhead:3,
        ax: 0,
        ay: -30
    };

    function addAnnon(ann_template, text, dt, yStart, color) {
        var ann = Object.assign({}, ann_template);
        ann.text=text;
        ann.x = dt;
        ann.y = yStart;
        ann.font = {color: ''+color};
        return ann
    }

    var mydatatable = null;
    var DATA_chart = null;
    var DATA_table = null;
    var socket = null;

    function init_predictionData() {
        var roomObj = {
            'sessionID':    getCookie('sessionID'),
            'exchange':     $('#exchange').val(),
        }
        socket = io.connect('/signals', {
            'path': '<%= root_node %>socket.io/',
        });

        socket.on('connect', function(data) {
            console.log("joining: ");
            socket.emit('join', roomObj);
        });
        socket.on('data', function(data) {
            DATA_table = data;
            console.log('server data received');
            //console.log(data);
            createTable(data);
        });


        socket.on('chart', function(data) {
            //console.log(data)
            DATA_chart = data;
            createChart_prediction_ohlc(data);
        });

        function createChart_prediction_ohlc(data) {
            var portfolio = data[0].portfolio;
            var data = data[0];

            var layout = {
                //title: data.name + ' ('+data.base_cur+'-'+data.quote_cur+') ROI: ' + data.proc.ROI.toFixed(2) + ' %',
                paper_bgcolor: 'rgba(0,0,0,0)',
                plot_bgcolor: 'rgba(0,0,0,0)',
                showlegend: false,
                margin: { l: 0, r: 0, b: 35, t: 35, pad: 0 },
                dragmode:'pan',
                xaxis: {
                    type: 'date',
                    fixedrange: isMobile ? true: false,
                    //tickformat: '%H:%M',
                    rangeslider: {visible: false}

                },
                yaxis: {
                    //title: 'Price',
                    showgrid:true,
                    fixedrange: isMobile ? true: false,
                    side: 'left',
                },
                annotations: [],
            };
            var settings = {
                scrollZoom: isMobile ? false : true,
                displayModeBar : isMobile ? false: true,
                staticPlot: isMobile ? true : false,
            };
            var traces = [];
            
            var trace = {
                name: 'Price',
                x: [],
                low: [],
                open: [],
                close: [],
                high: [],
                y: [],
                // type: 'candlestick',
                type: 'scatter',
                decreasing: {line: {color: '#f75656'}},
                increasing: {line: {color: '#6bf755'}}, 
                line: {color: 'rgba(31,119,180,1)'}, 
            };

            for (var k in portfolio) {
                var dt = parseDateTime_string(k);
                var obj = portfolio[k];
                trace.x.push(dt)
                trace.open.push(obj.open)
                trace.close.push(obj.close)
                trace.low.push(obj.low)
                trace.high.push(obj.high)
                trace.y.push((obj.open+obj.close+obj.low+obj.high)/4)
                if ('buy' in obj) {
                    layout.annotations.push(addAnnon(ann_template_BottomUpArrow, "B", dt, obj.buy.buyprice_default, 'blue' ))
                } else if ('sell' in obj) {
                    layout.annotations.push(addAnnon(ann_template_TopDownArrow, "S", dt, obj.sell.sellprice_default, 'green' ))
                }
            }

            traces.push(trace);
            $('#'+data.chart_id).html(''); // delete any content (pre-loader etc)
            Plotly.newPlot(data.chart_id, traces, layout, settings);
        }

        

        function createTable(data) {
            if (mydatatable != null) {
                $('#myFoo').dataTable().fnDestroy();
            }

            console.log("createTable")
            $('#items').empty();

            for (var i in data) {
                var d = data[i];
            
                var s = '<tr>';
                
                s += '<td style="cursor:pointer;"></td>';
                s += '<td>'+d.name+'</td>'; 
                s += '<td  data-order="'+(d.proc.ROI).toFixed(2).replace('.','')+'">'+(d.proc.ROI).toFixed(2)+' %</td>'; 
                s += '<td>\
                		<button class="subbtn subemail" data-name="'+d.name+'" data-base_cur="'+d.base_cur+'" data-quote_cur="'+d.quote_cur+'" data-interval="'+d.interval+'" data-exchange="'+d.exchange+'" data-issub="'+('isSub_email' in d && d.isSub_email ? 1:0)+'" >email</button>\
                		<button class="subbtn subtelegram" data-name="'+d.name+'" data-base_cur="'+d.base_cur+'" data-quote_cur="'+d.quote_cur+'" data-interval="'+d.interval+'" data-exchange="'+d.exchange+'" data-issub="'+('isSub_telegram' in d && d.isSub_telegram ? 1:0)+'" >telegram</button>\
                	</td>'; // 5
                
                s += '<td>'+d.base_cur+'-'+d.quote_cur+'</td>'; 
                s += '<td>'+d.exchange+'</td>'; 
                s += '<td>'+d.interval+' minutes</td>'; 
                
                s += '<td><div data-id="'+d._id+'"> loading chart... </div></td>'; // 6

                s += '</tr>';

                $('#items').append(s);
            }
            
            mydatatable = $('#myFoo').DataTable({
                columnDefs: [{
                    "className": 'control',
                    "targets":  [0],
                },{
                    "orderable": false,
                    "targets":  [0, 3],
                }],
                "pageLength": 50,
                "processing": true,
                "order": [[ 2, 'desc' ], [ 1, 'asc' ], ],
                
                responsive: {
                    details: {
                        type: 'column',
                        target: 'tr td.control',
                        renderer: function ( api, rowIdx, columns ) {
                            var id = null;
                            var data = $.map( columns, function ( col, i ) {
                                if(col.hidden) {
                                    if (col.title == "Chart") {
                                        id = $(col.data).data('id');
                                        col.data = $(col.data);
                                        col.data.attr('id', 'chart_'+id);
                                        col.data = col.data[0].outerHTML
                                        return '<tr style="width:100%;" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
                                                '<td colspan="2" style="width:100%;">'+col.data+'</td>'+
                                            '</tr>';
                                    }
                                    else {
                                        return '<tr data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
                                                '<td>'+col.title+':'+'</td> '+
                                                '<td>'+col.data+'</td>'+
                                            '</tr>';
                                    }
                                } else {
                                    return '';
                                }
                            } ).join('');
                            if (id != null) {
                                var roomObj = {
                                    'sessionID':    getCookie('sessionID'),
                                    'id': id,
                                    'chart_id': 'chart_'+id,
                                }
                                socket.emit('chart', roomObj);
                                //console.log(roomObj);
                            }
                            return data ? $('<table style="width:100%;" />').append( data ) : false;
                        }
                    }
                }
            });

        }
        window.onresize = function() {
            if (DATA_chart != null) createChart_prediction_ohlc(DATA_chart);
        };

    }
    init_predictionData();

    $('body').on('click', '.showchart', function(e) {
        
    });

    $('body').on('click', '.subbtn.subemail', function(e) {
        
        var data = {
            'name': $(e.target).data('name') ,
            'base_cur': $(e.target).data('base_cur') ,
            'quote_cur': $(e.target).data('quote_cur') ,
            'interval': $(e.target).data('interval') ,
            'exchange': $(e.target).data('exchange') ,
        }
        submitSubAction(e, data, 'email');
        
    });
    $('body').on('click', '.subbtn.subtelegram', function(e) {
        
        var data = {
            'name': $(e.target).data('name') ,
            'base_cur': $(e.target).data('base_cur') ,
            'quote_cur': $(e.target).data('quote_cur') ,
            'interval': $(e.target).data('interval') ,
            'exchange': $(e.target).data('exchange') ,
        }
        submitSubAction(e, data, 'telegram');
        
    });

    function submitSubAction(e, data, subtype) {
        //console.log(e)
        //console.log(data)
        if ($(e.target).data('issub') == "0") {
            $(e.target).attr('disabled','disabled');
            $.ajax({
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                url: 'signals/sub/'+subtype,            
                success: function(data) {
                    $(e.target).removeAttr('disabled');
                    //console.log(data)
                    if (data && data.ok && data.ok == 1) {
                        $(e.target).attr('data-issub', '1')
                        $(e.target).data('issub', '1')
                    }
                }
            });
        } else {
            $(e.target).attr('disabled','disabled');
            $.ajax({
                type: 'POST',
                data: JSON.stringify(data),
                contentType: 'application/json',
                url: 'signals/unsub/'+subtype,            
                success: function(data) {
                    $(e.target).removeAttr('disabled');
                    //console.log(data)
                    if (data && data.ok && data.ok == 1) {
                        $(e.target).attr('data-issub', '0')
                        $(e.target).data('issub', '0')
                    }
                }
            });
        }
    }

</script>



</body>
</html>
